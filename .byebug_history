exit
best_prices_by_month
exit
c
best
exit
((best.to_f - price.to_f) / best.to_f).abs
((best.to_f - price.to_f) / best.to_f).to_f
((best - price) / best).to_f
float(((best - price) / best))
((best - price) / best)
((best - price) / best).abs
((best - price) / best).abs < 0.1
price
best
exit
best_prices_by_month
exit
month_one_prices
exit
best_prices_by_month
c
best_prices_by_month
exit
c
date_nodes[0..1]
date_node
n
l
date_nodes.length
date_nodes
exit
date_nodes.length
date_nodes[0].find_element(:class, 'MHNSJI-p-f').attribute('innerHTML')
date_nodes[0].find_element(:class, 'MHNSJI-p-f')
date_nodes[0].find_element(:class, '.MHNSJI-p-f')
date_nodes[0].css('.MHNSJI-p-f')
date_nodes[0]
date_nodes = driver.find_elements(:class, 'MHNSJI
price_nodes[0]
price_nodes.length
price_nodes
best_prices_by_month
c
best_prices_by_month
exit
price_node.attribute("innerHTML").gsub(/[^\d]/, '').to_i
(price_node.attribute("innerHTML").gsub(/[^\d]/, '').to_i
price_node.attribute('innerHTML')[1..-1]
price_node.attribute('innerHTML')[1..-1].to_i
price_node.attribute('innerHTML').to_i
price_node.attribute('innerHTML')[/\d+/]
price_node.attribute('innerHTML')
exit
prices
best_prices_by_month
c
exit
MONTHS[month_one][:num_days]
MONTHS[month_one]
MONTHS[month_one]['num_days']
month_one
c
n
exit
all_prices['Month_1'][idx][/\d+/].to_i
int(all_prices['Month_1'][idx][/\d+/])
all_prices['Month_1'][idx][/\d+/]
all_prices['Month_1'][idx]
all_prices['Month_1']
